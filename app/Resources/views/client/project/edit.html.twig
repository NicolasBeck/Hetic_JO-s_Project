{% extends "@Client/layout.html.twig" %}

{% block variables %}
    {{ app.session.set('headerBackground', 'white') }}
{% endblock %}

{% block content %}
    <div class="project-create-content">
        {{ form_start(edit_form) }}
        <div class="menuForm">
            <div class="container">
                <div class="left">
                    <a href="{{ path('project_index') }}" class="blockButton goBack">
                        <span><img src="{{ asset('build/images/arrow.png') }}" alt=""></span>
                        <p>Retour au listing produits</p>
                    </a>
                </div>
                <div class="right">
                    <div class="statutProjet">
                        <input type="checkbox" id="switch" />
                        <label for="switch">Toggle</label>
                        <p class="enCours">En cours</p>
                        <p  class="finis no">Finis</p>
                    </div>
                    <button type="submit" class="blockButton validate">
                        <p>Enregister le projet</p>
                        <span><img src="{{ asset('build/images/validate.png') }}" alt=""></span>
                    </button>
                    <button type="button" class="blockButton delete" id="delete-button">
                        <p>Supprimer le projet</p>
                        <span><img src="{{ asset('build/images/delete.png') }}" alt=""></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="containerForm">
            <div class="left">
                <div class="blockInput file imgAdd">
                    <label for="imgProjet">Ajouter une image à la une
                        {{ form_widget(edit_form.mainPicture) }}
                    </label>
                    <img class="imgFirstProject" src="{{ asset('uploads/project/picture/') }}{{ edit_form.mainPicture.vars.data.filename }}" alt="Image à la une">
                    <span class="modif"><i class="fas fa-pencil-alt"></i></span>
                    <span class="remove">&#10005;</span>
                </div>
                <div class="blockInput multipleFile">
                    <div class="addFiles">
                        <p>Ajouter d’autre images <span></span>
                    </div>
                    <div class="containerOtherFile" data-prototype="
                        {% filter escape %}
                            {{ include('@Client/project/sub-picture-prototype.html.twig', { 'form': edit_form.subPictures.vars.prototype }) }}
                        {% endfilter %}
                    ">

                        {% for subPicture in edit_form.subPictures.children %}

                            <div class="blockImgOther fileIn">
                                <label for="otherImg">
                                    Uploader votre image
                                    <input id="{{ subPicture.vars.id }}" name="project[subPictures][{{ subPicture.vars.name }}]" required="required" type="file">
                                </label>
                                <div class="infoFiles"><p>{{ subPicture.vars.data.filename }}<br clear="left"></p><span class="selFile">+</span></div>
                            </div>

                        {% endfor %}

                    </div>
                </div>
            </div>
            <div class="right">
                <div class="blockInput titreProjet">
                    <label for="titreProjet">Titre du projet</label>
                    {{ form_widget(edit_form.name) }}
                </div>
                <div class="block2x">
                    <div class="blockInput arrondissement noContain">
                        <label for="arrondissement">Arrondissement</label>
                        {{ form_widget(edit_form.district) }}
                    </div>
                    <div class="blockInput date ">
                        <label for="dateFirst">Date de début du projet</label>
                        {{ form_widget(edit_form.date) }}
                    </div>
                </div>
                <div class="block2x">
                    <div class="blockInput categorie noContain">
                        <label for="categorie">Catégorie du projet</label>
                        {{ form_widget(edit_form.category) }}
                    </div>
                    <div class="blockInput adresse">
                        <label for="adresse">Adresse du projet</label>
                        {{ form_widget(edit_form.address) }}
                    </div>
                </div>
                <div class="blockInput">
                    <label for="objectif">Objectif du projet</label>
                    {{ form_widget(edit_form.objectif) }}
                </div>
                <div class="blockInput">
                    <label for="description">Description du projet</label>
                    {{ form_widget(edit_form.description) }}
                </div>
            </div>
        </div>
        <div style="display: none">{{ form_row(edit_form.subPictures) }}</div>
        {{ form_end(edit_form) }}

        {{ form_start(delete_form, {'attr': {'id': 'delete_form'}}) }}
        {{ form_widget(delete_form) }}
        {{ form_end(delete_form) }}
    </div>
{% endblock %}

{% block addJavascripts %}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2" ></script>

    <script>

        var placeSearch, autocomplete;
        var componentForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            country: 'long_name',
            postal_code: 'short_name'
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                document.getElementById('autocomplete'),
                {
                    componentRestrictions: {country: "fr"},
                    types: ['address']
                });

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }

        document.getElementById('delete-button').addEventListener("click", function () {
            swal({
                title: 'Êtes-vous sûr?',
                text: "Vous ne pourrez pas récupérer ce projet !",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Supprimer',
                cancelButtonText: 'Annuler'
            }).then((result) => {
                if (result.value) {
                    document.getElementById('delete_form').submit();
                }
            })
        });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAjNmGNcn_frBID4bmej1AxG1kWPlE3zCc&libraries=places&callback=initAutocomplete" async defer></script>
{% endblock %}
