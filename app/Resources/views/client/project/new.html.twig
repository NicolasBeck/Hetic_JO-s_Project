{% extends "@Client/layout.html.twig" %}

{% block variables %}
    {{ app.session.set('headerBackground', 'white') }}
{% endblock %}

{% block content %}
    <div class="project-create-content">
        {{ form_start(form) }}
        <div class="menuForm">
            <div class="container">
                <div class="left">
                    <a href="{{ path('project_index') }}" class="blockButton goBack">
                        <span><img src="{{ asset('build/images/arrow.png') }}" alt=""></span>
                        <p>Retour au listing produits</p>
                    </a>
                </div>
                <div class="right">
                    <div class="statutProjet">
                        <input type="checkbox" id="switch" />
                        <label for="switch">Toggle</label>
                        <p class="enCours">En cours</p>
                        <p  class="finis no">Finis</p>
                    </div>
                    <button type="submit" class="blockButton validate">
                        <p>Enregister le projet</p>
                        <span><img src="{{ asset('build/images/validate.png') }}" alt=""></span>
                    </button>
                    <button type="button" class="blockButton delete">
                        <p>Supprimer le projet</p>
                        <span><img src="{{ asset('build/images/delete.png') }}" alt=""></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="containerForm">
            <div class="left">
                <div class="blockInput file">
                    <label for="imgProjet">Ajouter une image à la une
                        {{ form_widget(form.mainPicture) }}
                    </label>
                    <img class="imgFirstProject" src="#" alt="Image à la une">
                    <span class="modif"><i class="fas fa-pencil-alt"></i></span>
                    <span class="remove">&#10005;</span>
                </div>
                <div class="blockInput multipleFile">
                    <div class="addFiles">
                        <p>Ajouter d’autre images <span></span>
                    </div>
                    <div class="containerOtherFile" data-prototype="
                        {% filter escape %}
                            {{ include('@Client/project/sub-picture-prototype.html.twig', { 'form': form.subPictures.vars.prototype }) }}
                        {% endfilter %}
                    "></div>
                </div>
            </div>
            <div class="right">
                <div class="blockInput titreProjet">
                    <label for="titreProjet">Titre du projet</label>
                    {{ form_widget(form.name) }}
                </div>
                <div class="block2x">
                    <div class="blockInput arrondissement noContain">
                        <label for="arrondissement">Arrondissement</label>
                        {{ form_widget(form.district) }}
                    </div>
                    <div class="blockInput date ">
                        <label for="dateFirst">Date de début du projet</label>
                        {{ form_widget(form.date) }}
                    </div>
                </div>
                <div class="block2x">
                    <div class="blockInput categorie noContain">
                        <label for="categorie">Catégorie du projet</label>
                        {{ form_widget(form.category) }}
                    </div>
                    <div class="blockInput adresse">
                        <label for="adresse">Adresse du projet</label>
                        {{ form_widget(form.address) }}
                    </div>
                </div>
                <div class="blockInput">
                    <label for="objectif">Objectif du projet</label>
                    {{ form_widget(form.objectif) }}
                </div>
                <div class="blockInput">
                    <label for="description">Description du projet</label>
                    {{ form_widget(form.description) }}
                </div>
            </div>
        </div>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block addJavascripts %}
    <script>
    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('autocomplete'),
            {
                componentRestrictions: {country: "fr"},
                types: ['address']
            });

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
            }
        }
    }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDqMM0lL3gVMacyR7649s6UF5N-bwIRBEU&libraries=places&callback=initAutocomplete" async defer></script>
{% endblock %}

